{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/hardwaretemplate/hardwaretemplate.component.css","webpack:///./src/app/hardwaretemplate/hardwaretemplate.component.html","webpack:///./src/app/hardwaretemplate/hardwaretemplate.component.ts","webpack:///./src/app/menu-tabs/maincontent/maincontent.component.css","webpack:///./src/app/menu-tabs/maincontent/maincontent.component.html","webpack:///./src/app/menu-tabs/maincontent/maincontent.component.ts","webpack:///./src/app/menu-tabs/maincontent/maincontent.service.ts","webpack:///./src/app/menu-tabs/menu-tabs.component.css","webpack:///./src/app/menu-tabs/menu-tabs.component.html","webpack:///./src/app/menu-tabs/menu-tabs.component.ts","webpack:///./src/app/my-nav/my-nav.component.css","webpack:///./src/app/my-nav/my-nav.component.html","webpack:///./src/app/my-nav/my-nav.component.ts","webpack:///./src/app/softwaretemplate/softwaretemplate.component.css","webpack:///./src/app/softwaretemplate/softwaretemplate.component.html","webpack:///./src/app/softwaretemplate/softwaretemplate.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"\\n<my-nav></my-nav>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  //title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MyNavComponent } from './my-nav/my-nav.component';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatToolbarModule, MatButtonModule, MatSidenavModule, MatIconModule, MatListModule, MatGridListModule, MatCardModule, MatMenuModule, MatTableModule, MatPaginatorModule, MatSortModule, MatFormFieldModule, MatSelectModule } from '@angular/material';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport { MenuTabsComponent } from './menu-tabs/menu-tabs.component';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {RouterModule, Routes} from '@angular/router';\nimport { HardwaretemplateComponent } from './hardwaretemplate/hardwaretemplate.component';\nimport { SoftwaretemplateComponent } from './softwaretemplate/softwaretemplate.component';\nimport { MaincontentComponent } from './menu-tabs/maincontent/maincontent.component';\nimport { MatInputModule } from '@angular/material';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { MainContentService } from './menu-tabs/maincontent/maincontent.service';\nconst appRoutes: Routes = [\n\n  {\n\n    path: \" \",\n    component: SoftwaretemplateComponent\n   \n  },\n  {\n\n    path: \"/menubarone\",\n    component: HardwaretemplateComponent\n   \n  },\n  {\n    path: \"/menubarone2\",\n    component: SoftwaretemplateComponent\n  }\n];\n\n\nconst appRoutes1: Routes = [\n  { path: 'Add', component: MenuTabsComponent },\n  { path: 'Search', component: SoftwaretemplateComponent},\n];\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MyNavComponent,\n    MenuTabsComponent,\n    HardwaretemplateComponent,\n    SoftwaretemplateComponent,\n    MaincontentComponent,   \n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    LayoutModule,\n    HttpClientModule,\n    MatExpansionModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatGridListModule,\n    MatCardModule,\n    MatMenuModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatTabsModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    FormsModule,\n    RouterModule.forRoot(appRoutes1,{ enableTracing: true } )\n      ],\n  providers: [MainContentService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n","module.exports = \".example-card {\\r\\n    max-width: 400px;\\r\\n  }\\r\\n  \\r\\n  .example-header-image {\\r\\n    background-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg');\\r\\n    background-size: cover;\\r\\n  }\"","module.exports = \"<mat-card class=\\\"example-card\\\">\\n    <mat-card-header>\\n      <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\n      <mat-card-title>Shiba Inu</mat-card-title>\\n      <mat-card-subtitle>Dog Breed</mat-card-subtitle>\\n    </mat-card-header>\\n    <img mat-card-image src=\\\"https://material.angular.io/assets/img/examples/shiba2.jpg\\\" alt=\\\"Photo of a Shiba Inu\\\">\\n    <mat-card-content>\\n      <p>\\n        The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.\\n        A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally\\n        bred for hunting.\\n      </p>\\n    </mat-card-content>\\n    <mat-card-actions>\\n      <button mat-button>LIKE</button>\\n      <button mat-button>SHARE</button>\\n    </mat-card-actions>\\n  </mat-card>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-hardwaretemplate',\n  templateUrl: './hardwaretemplate.component.html',\n  styleUrls: ['./hardwaretemplate.component.css']\n})\nexport class HardwaretemplateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<form (ngSubmit)=\\\"onSubmit(mainCont)\\\" #maincontentForm=\\\"ngForm\\\">\\n <!--  <form  #maincontentForm=\\\"ngForm\\\"> -->\\n  <div class=\\\"form-group\\\" *ngIf=\\\"response\\\">\\n    <label for=\\\"selectDT\\\">Example select</label>\\n    <select *ngIf=\\\"response.selectoptiontype\\\" class=\\\"form-control\\\" id=\\\"selectDT\\\" name=\\\"selectDT\\\" [(ngModel)]=\\\"mainCont.selectDT\\\" >\\n      <option *ngFor=\\\"let dt of response.selectoptiontype\\\" \\n       [value]=\\\"dt.Id\\\" >{{dt.name}}</option>  \\n    </select>\\n    <div *ngIf=\\\"errormsg\\\">\\n      {{errormsg}}\\n    </div>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"state\\\">Example multiple select</label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"state\\\"\\n              [(ngModel)]=\\\"mainCont.state\\\"  name=\\\"state\\\"\\n               >\\n  </div>\\n \\n  <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\">Save</button>\\n</form>\\n\\n{{maincontentForm.value | json}}\\n\\n\"","import { Component, OnInit,ViewChild, Injectable } from '@angular/core';\nimport { MainContent } from 'src/app/model/maincontent.model';\nimport { MainContentService } from './maincontent.service';\n\n\n@Component({\n  selector: 'main-content',\n  templateUrl: './maincontent.component.html',\n  styleUrls: ['./maincontent.component.css']\n})\n\n\nexport class MaincontentComponent implements OnInit {\n\n  response :any;\n  errormsg:any;\n  mainCont : MainContent = {\n    selectDT:null,\n    state:null\n   \n  }\n  constructor(private _maincontentserrvice:MainContentService) {}\n\n  \n  ngOnInit() {\n    \n    \n  this.getResponse();\n    \n  \n   /*  let obs = this.httpClient.get('assets/customer.json');\n    obs.subscribe((res)=> {\n      console.log(res+\"-------------- saddsdsad\")\n      this.response = res;\n    }) */\n  }\n\n  getResponse(){\n    this._maincontentserrvice.getDeviceTypeList().\n    subscribe(data=> {\n      // console.log(res+\"-------------- saddsdsad\")\n       console.log(\"this.response  \"+JSON.stringify(data));\n       this.response = data\n    },\n       error => {\n         console.log(\"this.response  \"+JSON.stringify(error));\n       this.errormsg = error\n       });\n      \n  }\n\n /*  onSubmit(mcForm:NgForm):void { \n\n    console.log(mcForm.value)\n   }\n  */\n onSubmit(mcForm:MainContent):void { \n\n  console.log(mcForm)\n }\n\n  \n  \n\n}\n","import { HttpClient, HttpErrorResponse } from \"@angular/common/http\";\r\nimport { Observable, throwError } from \"rxjs\";\r\nimport { DeviceTypeList } from \"src/app/model/devicetype.model\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class MainContentService {\r\n\r\n    url ='assets/customer.json';\r\n\r\n    constructor(private httpClient: HttpClient) {\r\n    }\r\n\r\n    getDeviceTypeList(): Observable<DeviceTypeList[]> {\r\n        return this.httpClient.get<DeviceTypeList[]>('assets/customer.json')\r\n        .pipe(catchError(this.handleError));\r\n    }\r\n\r\n    private handleError(errorResponse: HttpErrorResponse) {\r\n        if (errorResponse.error instanceof ErrorEvent) {\r\n            console.error('Client Side Error :', errorResponse.error.message);\r\n        } else {\r\n            console.error('Server Side Error :', errorResponse);\r\n        }\r\n        // return an observable with a meaningful error message to the end user\r\n        return throwError('There is a problem with the service.We are notified & working on it. Please try again later.');\r\n    }\r\n}","module.exports = \"\"","module.exports = \"<div  style=\\\"margin-left: 1%;margin-right: 1%\\\">\\n  \\n  <mat-tab-group [@.disabled]=\\\"true\\\">\\n      <mat-tab label=\\\"Hardware\\\"> <main-content></main-content> </mat-tab>\\n      <mat-tab label=\\\"Software\\\"> Content 2 </mat-tab>\\n      <mat-tab label=\\\"Method\\\"> Content 3 </mat-tab>\\n\\n</mat-tab-group>\\n\\n<!--<nav mat-tab-nav-bar >\\n    <a mat-tab-link\\n       *ngFor=\\\"let link of links\\\"\\n       [routerLink]=\\\"link.path\\\"\\n       routerLinkActive #rla=\\\"routerLinkActive\\\"\\n       [active]=\\\"activeLink == link\\\">\\n      {{link}}\\n    </a>\\n  </nav>\\n-->\\n\\n</div>\\n\\n\\n\"","import { Component, OnInit, Input } from '@angular/core';\n\n\n@Component({\n  selector: 'menu-tabs',\n  templateUrl: './menu-tabs.component.html',\n  styleUrls: ['./menu-tabs.component.css']\n})\nexport class MenuTabsComponent implements OnInit {\n  links = ['First', 'Second', 'Third'];\n  background = '';\n \n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".sidenav-container {\\n  height: 100%;\\n}\\n\\n.sidenav {\\n  width: 200px;\\n  box-shadow: 3px 0 6px rgba(0,0,0,.24);\\n}\\n\"","module.exports = \"<!--<mat-sidenav-container class=\\\"sidenav-container\\\">\\n  <mat-sidenav\\n    #drawer\\n    class=\\\"sidenav\\\"\\n    fixedInViewport=\\\"true\\\"\\n    [attr.role]=\\\"isHandset ? 'dialog' : 'navigation'\\\"\\n    [mode]=\\\"(isHandset | async)!.matches ? 'over' : 'side'\\\"\\n    [opened]=\\\"!(isHandset | async)!.matches\\\">\\n    <mat-toolbar color=\\\"primary\\\">Menu</mat-toolbar>\\n   \\n    <mat-accordion multi=\\\"true\\\" [displayMode]=\\\"displayMode\\\">\\n      <mat-expansion-panel class=\\\"no-shadow\\\">\\n        <mat-expansion-panel-header  fxLayout=\\\"row\\\" [expandedHeight]=\\\"expandHeight\\\" [collapsedHeight]=\\\"collapseHeight\\\">\\n          <mat-panel-title>\\n            Terminal\\n          </mat-panel-title>\\n        </mat-expansion-panel-header>\\n        <mat-nav-list class=\\\"ml-0\\\" dense>\\n          \\n            <a  mat-list-item  routerlink=\\\"/Add\\\" >\\n              <div class=\\\"mat-list-item-content\\\">\\n                <div class=\\\"mat-list-item-ripple mat-ripple\\\" ></div>\\n                <div class=\\\"mat-list-text\\\"></div>Add\\n              </div>\\n            </a>\\n\\n            <a  mat-list-item routerlink=\\\"/Search\\\" >\\n              <div class=\\\"mat-list-item-content\\\">\\n                <div class=\\\"mat-list-item-ripple mat-ripple\\\"></div>\\n                <div class=\\\"mat-list-text\\\"></div>Search\\n              </div>\\n            </a>\\n          \\n          \\n        </mat-nav-list>\\n      </mat-expansion-panel>\\n      \\n    </mat-accordion>\\n  </mat-sidenav>\\n  <mat-sidenav-content>\\n    <mat-toolbar color=\\\"primary\\\">\\n      <button\\n        type=\\\"button\\\"\\n        aria-label=\\\"Toggle sidenav\\\"\\n        mat-icon-button\\n        (click)=\\\"drawer.toggle()\\\"\\n        *ngIf=\\\"(isHandset | async)!.matches\\\">\\n        <mat-icon aria-label=\\\"Side nav toggle icon\\\">menu</mat-icon>\\n      </button>\\n      <span>Dashboard</span>\\n      \\n    </mat-toolbar>\\n   \\n   <menu-tabs></menu-tabs>\\n\\n  <router-outlet name='left'></router-outlet>\\n  \\n  </mat-sidenav-content>\\n  \\n</mat-sidenav-container>-->\\n\\n\\n<mat-sidenav-container class=\\\"sidenav-container\\\">\\n    <mat-sidenav\\n      #drawer\\n      class=\\\"sidenav\\\"\\n      fixedInViewport=\\\"true\\\"\\n      [attr.role]=\\\"isHandset ? 'dialog' : 'navigation'\\\"\\n      [mode]=\\\"(isHandset | async)!.matches ? 'over' : 'side'\\\"\\n      [opened]=\\\"!(isHandset | async)!.matches\\\">\\n      <mat-toolbar color=\\\"primary\\\">Menu</mat-toolbar>\\n      <mat-accordion multi=\\\"true\\\" [displayMode]=\\\"displayMode\\\">\\n          <mat-expansion-panel class=\\\"no-shadow\\\">\\n              <mat-expansion-panel-header  fxLayout=\\\"row\\\" [expandedHeight]=\\\"expandHeight\\\" [collapsedHeight]=\\\"collapseHeight\\\">\\n                <mat-panel-title>\\n                  Terminal\\n                </mat-panel-title>\\n              </mat-expansion-panel-header>\\n          <mat-nav-list>\\n              <a mat-list-item routerLink=\\\"/Add\\\">Add</a>\\n              <a mat-list-item routerLink=\\\"/Search\\\">Search</a> \\n          </mat-nav-list>\\n          </mat-expansion-panel>\\n\\n          <mat-expansion-panel class=\\\"no-shadow\\\">\\n              <mat-expansion-panel-header  fxLayout=\\\"row\\\" [expandedHeight]=\\\"expandHeight\\\" [collapsedHeight]=\\\"collapseHeight\\\">\\n                <mat-panel-title>\\n                  Night Drop\\n                </mat-panel-title>\\n              </mat-expansion-panel-header>\\n          <mat-nav-list>\\n              <a mat-list-item routerLink=\\\"/Add\\\">Add</a>\\n              <a mat-list-item routerLink=\\\"/Search\\\">Search</a> \\n          </mat-nav-list>\\n          </mat-expansion-panel>\\n      </mat-accordion>\\n    </mat-sidenav>\\n    <mat-sidenav-content>\\n      <mat-toolbar color=\\\"primary\\\">\\n        <button\\n          type=\\\"button\\\"\\n          aria-label=\\\"Toggle sidenav\\\"\\n          mat-icon-button\\n          (click)=\\\"drawer.toggle()\\\"\\n          *ngIf=\\\"(isHandset | async)!.matches\\\">\\n          <mat-icon aria-label=\\\"Side nav toggle icon\\\">menu</mat-icon>\\n        </button>\\n        <span>Dashboard</span>\\n        \\n      </mat-toolbar>\\n      <router-outlet ></router-outlet>\\n      </mat-sidenav-content>\\n    \\n  </mat-sidenav-container>\\n\\n\\n\\n\"","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { RouterModule, Routes } from '@angular/router';\n\n@Component({\n  selector: 'my-nav',\n  templateUrl: './my-nav.component.html',\n  styleUrls: ['./my-nav.component.css']\n})\nexport class MyNavComponent {\n  isHandset: Observable<BreakpointState> = this.breakpointObserver.observe(Breakpoints.Handset);\n  constructor(private breakpointObserver: BreakpointObserver) {}\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  softwaretemplate works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-softwaretemplate',\n  templateUrl: './softwaretemplate.component.html',\n  styleUrls: ['./softwaretemplate.component.css']\n})\nexport class SoftwaretemplateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}